"""
This type stub file was generated by pyright.
"""

types = ...
def guess(obj): # -> Dwg | Xcf | Jpeg | Jpx | Apng | Png | Gif | Webp | Tiff | Cr2 | Bmp | Jxr | Psd | Ico | Heic | filetype.types.image.Dcm | Avif | Aac | Midi | Mp3 | M4a | Ogg | Flac | Wav | Amr | Aiff | M3gp | Mp4 | M4v | Mkv | Mov | Avi | Wmv | Mpeg | Webm | Flv | Woff | Woff2 | Ttf | Otf | Doc | Docx | Odt | Xls | Xlsx | Ods | Ppt | Pptx | Odp | Br | Rpm | filetype.types.archive.Dcm | Epub | Zip | Tar | Rar | Gz | Bz2 | SevenZ | Pdf | Exe | Swf | Rtf | Nes | Crx | Cab | Eot | Ps | Xz | Sqlite | Deb | Ar | Z | Lzop | Lz | Elf | Lz4 | Zstd | Wasm | None:
    """
    Infers the type of the given input.

    Function is overloaded to accept multiple types in input
    and peform the needed type inference based on it.

    Args:
        obj: path to file, bytes or bytearray.

    Returns:
        The matched type instance. Otherwise None.

    Raises:
        TypeError: if obj is not a supported type.
    """
    ...

def guess_mime(obj): # -> Any | None:
    """
    Infers the file type of the given input
    and returns its MIME type.

    Args:
        obj: path to file, bytes or bytearray.

    Returns:
        The matched MIME type as string. Otherwise None.

    Raises:
        TypeError: if obj is not a supported type.
    """
    ...

def guess_extension(obj): # -> Any | None:
    """
    Infers the file type of the given input
    and returns its RFC file extension.

    Args:
        obj: path to file, bytes or bytearray.

    Returns:
        The matched file extension as string. Otherwise None.

    Raises:
        TypeError: if obj is not a supported type.
    """
    ...

def get_type(mime=..., ext=...): # -> Dwg | Xcf | Jpeg | Jpx | Apng | Png | Gif | Webp | Tiff | Cr2 | Bmp | Jxr | Psd | Ico | Heic | filetype.types.image.Dcm | Avif | Aac | Midi | Mp3 | M4a | Ogg | Flac | Wav | Amr | Aiff | M3gp | Mp4 | M4v | Mkv | Mov | Avi | Wmv | Mpeg | Webm | Flv | Woff | Woff2 | Ttf | Otf | Doc | Docx | Odt | Xls | Xlsx | Ods | Ppt | Pptx | Odp | Br | Rpm | filetype.types.archive.Dcm | Epub | Zip | Tar | Rar | Gz | Bz2 | SevenZ | Pdf | Exe | Swf | Rtf | Nes | Crx | Cab | Eot | Ps | Xz | Sqlite | Deb | Ar | Z | Lzop | Lz | Elf | Lz4 | Zstd | Wasm | None:
    """
    Returns the file type instance searching by
    MIME type or file extension.

    Args:
        ext: file extension string. E.g: jpg, png, mp4, mp3
        mime: MIME string. E.g: image/jpeg, video/mpeg

    Returns:
        The matched file type instance. Otherwise None.
    """
    ...

def add_type(instance): # -> None:
    """
    Adds a new type matcher instance to the supported types.

    Args:
        instance: Type inherited instance.

    Returns:
        None
    """
    ...

